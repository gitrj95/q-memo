simple memo lib

globals
.memo.cap cache capacity. defaults to 100
.memo.p   cache prefix. defaults to `cache

interface
.memo.init initializes a local cache
.memo.mk   makes a memoized copy of a function
.memo.rm   removes a memoized function's cached data and reverts the impl, if prudent
.memo.mv   moves a memoized function's cached data to another cache

examples
q)\l memo.k
q).memo.mk[til;`kiwi] / fails. we need to call .memo.init before calling .memo.mk
'init
  [0]  .memo.mk[til;`kiwi]
       ^
q).memo.init[] / .memo.init[] initializes a cache inside \d 
`..cache.0
q).memo.init` / behaves like .memo.init[]. if a cache already exists, keep the old one and make a new one
`..cache.1
q)\d .a
q.a).memo.init`
`.a.cache.0
q.a)\d .
q)add:+;sub:-;pr:*
q).memo.mk[add;`] / if the left is not a symbol, the right must be a non-null symbol 
'type
  [0]  .memo.mk[add;`]
       ^
q).memo.mk[add;`add] / sets the right to a memoized copy of add
`add
q).memo.mk[`sub;`] / if the left is a symbol and the right is `, we want the same name for the memoized copy
`sub
q).memo.mk[`pr;`grape] / if the left and right are both symbols, but the right is non-null, we keep the left and assign the memoized copy to the right
`grape
q)(+;-;*;*)~'(add;sub;pr;foo) / pr is undisturbed since we assigned the memoized copy to a new name
0010b
q).[grape;a]~pr . a:(1 2 3;4 5 6)
1b
q).memo.rm`add / since `add was passed in as a literal on the left, .memo.rm returns the original impl
+
q).memo.rm`sub / since `sub was passed in as a symbol on the left and the right, .memo.rm reverts `sub to its original impl and returns its name
`sub
q)add
'add
  [0]  add
       ^
q)sub
-
q).memo.rm`grape / since `grape was passed in as a symbol on the right and is different to that passed on the left, .memo.rm removes `grape and returns its original name
`pr
q)grape
'grape
  [0]  grape
       ^
q)pr
*
q).memo.mk[til;`kiwi]
`kiwi
q)\ts kiwi prd 8#10
899 1073742992
q)\ts kiwi prd 8#10
0 1104
q).memo.mv[`kiwi;`.a.cache.0] / we move kiwi's cached data to another cache table
`kiwi
q).a.cache.0
f    a         | r                                                                               ..
---------------| --------------------------------------------------------------------------------..
     ::        | ::                                                                              ..
kiwi ,100000000| 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 ..
q)\ts kiwi prd 8#10 / kiwi now references the new cache
0 1104
